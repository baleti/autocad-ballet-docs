* 2025
** August
*** 21
**** =12:25= getstring command feels clunky
:PROPERTIES:
:ID:       3fcf8dd5-0461-4278-9b17-9005fc13f9e4
:END:
when dynamic input is turned on ctrl+v doesn't work, pasteclip command is invoked instead
pressing space is interpreted as confirmation of the command rather than space in the string unless double quotes are used
for the command I'm setting up (rename tabs) a preview similar to that in rename commands in revit-ballet would be more practical
***** autolisp doesn't seem to have robust facilities for creating windows/windows forms
seems to expect separate .dcl files
writing them in the same files seems hard to modify
may move this command to .net instead
*** 22
**** =10:03= batch processing of multiple documents opened in a single autocad process
ai suggests that .net may offer better faciilities to manage multiple opened documents
autolisp scripts resorted to activex, which although worked, sounds like a legacy solution that wouldn't be suitable for going forward
**** =14:48= it feels wrong, but I may have to port command invoker from revit-ballet to autocad-ballet
***** autocad builtin command line doesn't let you search by mutliple substrings
command SelectXrefs would ideall be sought by "sel xr"
instead builtin autocad command treats space as confirmation
this requires typing "selectx" to find SelectXrefs command
with likely future larger amount of Select- commands this will become cumbersome
***** issues [[id:3fcf8dd5-0461-4278-9b17-9005fc13f9e4][described above]]
***** during testing limitations of netload surfaced up
[2025-08-31 Sun 15:14]
a dll assembly can't be reloaded
a .net registered command can't be unregistered
decided to abandon idea of integrating with autocad command line and simply invoke commands in the same way as in revit
***** ended up keeping dotnet code in a single dll and both register commands in autocad and invoke them from InvokeAddinCommand
InvokeAddinCommand should prove useful when developing new commands
registering commands in autocad directly likely brings benefits later
  aliases, autodesk app store
*** 28
**** =13:00= it took me a while to switch to dotnet cli and emacs-based workflow for c#
as opposed to previous visual studio gui
still need to work out debugging and lsp support in emacs
** September
*** 03
**** =13:00= decided to use acad.lsp for autoloading instead of autodesk app store-based bundle format
*** 04
**** =13:00= decided to write a custom installer instead of using autodesk/windows frameworks
acad.lsp-based workflow is both simple and bespoke, so popular framework will likely only get in the way
*** 05
**** =14:00= decided to setup documentation repo properlt this time
use hugo static site generator to make it pretty
create one .org file per command, likely one page listing them all
move journal there too
